name: Testing WTANGY.SE

on:
  pull_request:
    types: [opened, synchronize, closed]
  schedule:
    - cron: '10 4 * 1-7,10-12 *' # At 04:10 in every month from January through July and every month from October through December.

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      # TODO: Migrate to 3.10 after succesful redeploy with GitHub Actions
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
        pip install -r lint_requirements.txt
    - run: pip check
    - name: Lint with pylint
      run: |
        pylint --version
        pylint --rcfile=pylintrc src/*.py *.py
    - name: Format with black
      run: |
        black --version
        black --diff --check src/*.py *.py
    - name: Isort with black
      run: |
        isort --skip-glob src/lib --profile black .

  #

  deploy_test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v4

    # https://github.com/google-github-actions/auth#with-workload-identity-federation
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: "projects/210229919199/locations/global/workloadIdentityPools/wtangy-pool/providers/my-provider"
        service_account: "wasthereannhlgamelastnight@appspot.gserviceaccount.com"
        project_id: "wasthereannhlgamelastnight"

    - name: 'Set up Cloud SDK so we can run gcloud commands'
      uses: 'google-github-actions/setup-gcloud@v2'
    - run: "gcloud config list"
    - run: 'echo "${{ steps.auth.outputs.project_id }}"'

    - run: "cat src/app_testing.yaml | tee -a src/app.yaml"
      name: 'custom app.yaml for testing for allowing updating schedule without credentials'
    - run: "cat src/app.yaml.end | tee -a src/app.yaml"
      name: 'add the wildcard handler'

    - run: "cat src/app.yaml"
      name: "Print testing app.yaml"

    - id: 'deploy_to_test'
      name: 'Deploy to Test'
      uses: 'google-github-actions/deploy-appengine@v2'
      with:
        project_id: wasthereannhlgamelastnight
        deliverables: "src/app.yaml src/cron.yaml"
        version: testing
        promote: False
    - run: 'echo "TESTING version_url: ${{ steps.deploy_to_test.outputs.version_url }} is ${{ steps.deploy_to_test.outputs.serving_status }}"'

  #

  deploy_prod_on_merge:
    needs: final_final_test
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    if: github.event.pull_request.merged == true || github.event_name == 'schedule'

    steps:
    - uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: "projects/210229919199/locations/global/workloadIdentityPools/wtangy-pool/providers/my-provider"
        service_account: "wasthereannhlgamelastnight@appspot.gserviceaccount.com"
        project_id: "wasthereannhlgamelastnight"

    - name: 'Set up Cloud SDK so we can run gcloud commands'
      uses: 'google-github-actions/setup-gcloud@v2'
    - run: "gcloud config list"

    # master

    - run: "cat src/app_testing_disable.yaml | tee -a src/app.yaml"
      name: 'set the extra update url to require admin auth in prod'
    - run: "cat src/app.yaml.end | tee -a src/app.yaml"
      name: 'add the wildcard handler'
    - run: "cat src/app.yaml"
      name: "Print prod app.yaml"

    - id: 'deploy'
      name: 'Deploy to Prod'
      uses: 'google-github-actions/deploy-appengine@v2'
      with:
        project_id: wasthereannhlgamelastnight
        deliverables: src/app.yaml src/cron.yaml
        version: master
        promote: True
    - name: "Test that it is not completely broken after deployment"
      run: "curl -q https://wtangy.se"
    - run: 'echo "PROD version_url: ${{ steps.deploy.outputs.version_url }} is ${{ steps.deploy.outputs.serving_status }}"'

    - name: Remove testing after prod deployment to reduce cost
      run: "gcloud app versions delete --project wasthereannhlgamelastnight testing"

  # Some e2e tests at the end

  final_final_test:
    needs: deploy_test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: update_schedule in testing first
      run: "curl https://testing-dot-wasthereannhlgamelastnight.appspot.com/update_schedule_6fd74614-9bdd-45a5-a96d-a19b597bc604"
    - name: e2e_test.py testing at the end
      run: "python e2e_test.py"

  final_final_prod:
    needs: deploy_prod_on_merge
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: e2e_test.py prod too
      run: "python e2e_test.py --host https://wtangy.se"
